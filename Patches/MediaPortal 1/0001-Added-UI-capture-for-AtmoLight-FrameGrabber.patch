From 712749d46c87aec828bf7264c1e29770866e2a1d Mon Sep 17 00:00:00 2001
From: Lightning303 <Lightning303@gmail.com>
Date: Wed, 30 Apr 2014 23:16:58 +0200
Subject: [PATCH] Added UI capture for AtmoLight/FrameGrabber

---
 mediaportal/MediaPortal.Application/MediaPortal.cs | 23 ++++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/mediaportal/MediaPortal.Application/MediaPortal.cs b/mediaportal/MediaPortal.Application/MediaPortal.cs
index d215874..29f750b 100644
--- a/mediaportal/MediaPortal.Application/MediaPortal.cs
+++ b/mediaportal/MediaPortal.Application/MediaPortal.cs
@@ -194,6 +194,9 @@ public class MediaPortalApp : D3D, IRender
 
   private ShellNotifications Notifications = new ShellNotifications();
 
+  // Framegrabber instance
+  private FrameGrabber grabber = FrameGrabber.GetInstance();
+
   #endregion
 
   #region enumns
@@ -3035,6 +3038,17 @@ public class MediaPortalApp : D3D, IRender
               GUIGraphicsContext.Render3DMode == GUIGraphicsContext.eRender3DMode.SideBySideTo2D ||
               GUIGraphicsContext.Render3DMode == GUIGraphicsContext.eRender3DMode.TopAndBottomTo2D)
           {
+            // Call Framegrabber with UI Surface
+            // Needed for AtmoLight UI capture
+            Surface atmoLightSurface = GUIGraphicsContext.DX9Device.GetBackBuffer(0, 0, BackBufferType.Mono);
+            Int16 atmoLightWidth = (Int16)atmoLightSurface.Description.Width;
+            Int16 atmoLightHeight = (Int16)atmoLightSurface.Description.Height;
+            unsafe
+            {
+              grabber.OnFrame(atmoLightWidth, atmoLightHeight, 0, 0, (uint)atmoLightSurface.UnmanagedComPointer);
+            }
+            atmoLightSurface.Dispose();
+
             // clear the surface
             GUIGraphicsContext.DX9Device.Clear(ClearFlags.Target, Color.Black, 1.0f, 0);
             GUIGraphicsContext.DX9Device.BeginScene();
@@ -3068,6 +3082,15 @@ public class MediaPortalApp : D3D, IRender
 
             Surface backbuffer = GUIGraphicsContext.DX9Device.GetBackBuffer(0, 0, BackBufferType.Mono);
 
+            // Call Framegrabber with UI Surface
+            // Needed for AtmoLight UI capture
+            Int16 atmoLightWidth = (Int16)backbuffer.Description.Width;
+            Int16 atmoLightHeight = (Int16)backbuffer.Description.Height;
+            unsafe
+            {
+              grabber.OnFrame(atmoLightWidth, atmoLightHeight, 0, 0, (uint)backbuffer.UnmanagedComPointer);
+            }
+
             // create texture/surface for preparation for 3D output if they don't exist
 
             Texture auto3DTexture = new Texture(GUIGraphicsContext.DX9Device,
-- 
1.9.0.msysgit.0

